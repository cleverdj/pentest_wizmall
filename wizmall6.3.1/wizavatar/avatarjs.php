<?
include_once $DOCUMENT_ROOT."/config/avatar_config.php";
$avatar_skin_path = "/wizavatar/avatar_skin/".$avatar_skin;
?>
/**********************************************
전역변수
설명:
전체 function 는 전역변수를 사용한다.
**********************************************/
/*********************************************
input_ch(a_src,layer_no,gender) : 아바타 이미지 문자 입력하는 부분
init_d(layer_no.gender) : 디스플레이 삭제
**********************************************/

var ImgChar; // 아바타 레이어
var ava; // 아바타 디스플레이 레이어
var item = new Array(20) // 아이템 저장
var tmpArr = new Array(20) // 아이템 저장
var patten = /[default_blank.gif]/   //패턴용
var current_imgname = new Array(20) // 아이템 저장
var last; // 마지막 사용
var i;
var AvatarImgPath="/config/wizavatar/avatarimg/"; // 공용 url
var count;
var tmp;
var a_src;
var layer_no;
var gender;
var tem_no;
var patten = /^(.*)default_blank.gif+$/; 

function wizwindow(url,name,flag){
	var newwin = window.open(url,name,flag);
	if(newwin){
		newwin.focus();
	}else{
		alert('팝업창이 차단되어 있습니다.\n\n해제해 주세요');	
	}
}

function temp(k){

	if(current_imgname[k] == "default_blank.gif") return false;
	else { return true; }
} // 임시

function o_public_ch(layer_no){
	document.images["ImgChar"+layer_no].src=AvatarImgPath+current_imgname[layer_no];
}

function public_ch(src,layer_no,gender){
	document.images["ImgChar"+layer_no].src=AvatarImgPath+src;

//	if ( layer_no != 9 ) document.images["ava"+layer_no].src=AvatarImgPath+src;
//원래프로그램 ; 레이어변동후 입고 있는 아바타 리스트 출력하기
}

function ch_avatar(item_no, my_item_no, ly){//내옷장에서 아바타 변경
	//tmp_init(a_src,layer_no,gender);
	createXMLHttpRequest();
	var url = "./wizavatar/avatarProc.php";
 	var queryString = "mode=updatemyon&no="+item_no;
	xmlHttp.open("POST", url, true);
	xmlHttp.onreadystatechange = handlech_avatar;
	xmlHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");    
	xmlHttp.send(queryString);	
}

function ch_avatar1(imgname, layer_no){//단순하게 특정레이어의 이미지만 변경
	document.images["ImgChar"+layer_no].src=AvatarImgPath+imgname;
}

function handlech_avatar() {
    if(xmlHttp.readyState == 4) {
        if(xmlHttp.status == 200) {
			var result = xmlHttp.responseXML.getElementsByTagName("flag")[0].firstChild.data;
			var src0 = xmlHttp.responseXML.getElementsByTagName("src0")[0].firstChild.data;
			var src1 = xmlHttp.responseXML.getElementsByTagName("src1")[0].firstChild.data;
			var src2 = xmlHttp.responseXML.getElementsByTagName("src2")[0].firstChild.data;
			var layer_no = xmlHttp.responseXML.getElementsByTagName("layer_no")[0].firstChild.data;
				//alert(result+','+src1+','+layer_no)
			if(result == 1){
				//alert(result+','+src1+','+src2+','+layer_no)
				input_ch1(src1, src2, layer_no);
				document.images["MyAvatarItem"+layer_no].src=AvatarImgPath+src0;
				//eval("TakeOffBtn"+layer_no+".style.display='block'");
				ch_avatarface();
			}		
			
        }else{
			alert('./wizavatar/avatarPorc.php\n접속실패(1)');
		}
    }
}


function s_src(a_src,layer_no) { // 변수 등록해주기
	if (layer_no != "" ){
		current_imgname[layer_no]=a_src;
		last=layer_no;
	}
}

function take_avatar(a_src,layer_no,gender,item_no,a_src1){   // 아바타 바꾸기
	//a_src: 아바타 이미지, layer_no : 레이어번호, gender : 아이템성, item_no : 아이템 고유번호, a_src1 : 추가레이어(뒷머리);
	//alert(a_src+","+layer_no+","+gender+","+item_no);
	if(current_imgname[layer_no] != a_src){
		SavePresentAvatar(a_src,layer_no,gender,item_no, 'plus');
		item[layer_no]= item_no;
		take_avatar1(a_src,layer_no);
		if(layer_no == "9" && a_src1 != ""){//9:얼굴
			take_avatar1(a_src1,'16');//뒷헤어착용
		}
	}else {
		take_off(a_src,layer_no,gender,item_no) ;
		if(layer_no == "9" && a_src1 != ""){//9:얼굴
			take_off(a_src1,'16',gender,item_no);//뒷헤어벗기기
		}		
	}

	//changeAvatarFace(item_no,layer_no);//아바타 표정 변경
	ch_avatarface();
	// 상체, 하체 얼굴이 없을 경우 기본값으로 변경
}

function avatar_trim(){//현재레이어 값을 가져와 필요없는 부분정리
	if(getAvatarFilename(document.images["ImgChar13"].src) != "default_blank.gif" ){//한벌의상을 입었으면
		ch_avatar1("default_blank.gif",'10');//상의
		ch_avatar1("default_blank.gif",'12');//하의
		ch_avatar1("default_blank.gif",'9');//얼굴
		ch_avatar1("default_blank.gif",'16');//뒷헤어
		ch_avatar1("default_blank.gif",'17');//테마의상
	}else if(getAvatarFilename(document.images["ImgChar17"].src) != "default_blank.gif"){//테마의상
		ch_avatar1("default_blank.gif",'10');//상의
		ch_avatar1("default_blank.gif",'12');//하의
		ch_avatar1("default_blank.gif",'9');//얼굴
		ch_avatar1("default_blank.gif",'16');//뒷헤어
		ch_avatar1("default_blank.gif",'17');//테마의상
	}
}

function ch_avatarface(){
	if(getAvatarFilename(document.images["ImgChar13"].src) != "default_blank.gif" ){//한벌의상이면
		getInitAvatarFace(getAvatarFilename(document.images["ImgChar13"].src),'13');
	}else if(getAvatarFilename(document.images["ImgChar9"].src) != "default_blank.gif"){//얼굴이면
		getInitAvatarFace(getAvatarFilename(document.images["ImgChar9"].src),'9');
	}else if(getAvatarFilename(document.images["ImgChar17"].src) != "default_blank.gif"){//테마의상
		getInitAvatarFace(getAvatarFilename(document.images["ImgChar17"].src),'17');
	}
}

function take_session_avatar(a_src,layer_no,gender,item_no,a_src1){   // 세션으로부터 아바타 변경
	take_avatar(a_src,layer_no,gender,item_no,a_src1);
}

function take_avatar1(a_src,layer_no){
	if(!patten.test(document.images["ImgChar13"].src)){ //한벌의상(13)이 현재 입혀져 있으면 기존 아바타 복원
		if(layer_no == "8" || layer_no == "10" || layer_no == "12" || layer_no == "9" || layer_no == "15" || layer_no == "16"){
				origin_ch1(origin_avatar_8_src,8);
				origin_ch1(origin_avatar_9_src,9);
				origin_ch1(origin_avatar_10_src,10);
				origin_ch1(origin_avatar_12_src,12);
				origin_ch1(origin_avatar_9_src,9);
				origin_ch1(origin_avatar_15_src,15);
				origin_ch1(origin_avatar_16_src,16);
				makeBlank(13);//한벌의상
		}
	}else if(!patten.test(document.images["ImgChar17"].src)){ //테마의상(17)이 현재 입혀져 있으면 기존 아바타 복원
		if(layer_no == "8" || layer_no == "10" || layer_no == "12" || layer_no == "9" || layer_no == "15" || layer_no == "16"){
				origin_ch1(origin_avatar_8_src,8);
				origin_ch1(origin_avatar_9_src,9);
				origin_ch1(origin_avatar_10_src,10);
				origin_ch1(origin_avatar_12_src,12);
				origin_ch1(origin_avatar_9_src,9);
				origin_ch1(origin_avatar_15_src,15);
				origin_ch1(origin_avatar_16_src,16);
				makeBlank(17);//한벌의상
		}
	}

	switch(layer_no){ 
		case("13")://한벌의상:앞헤어, 얼굴, 상의 하의 , 뒤헤어를 삭제
			current_imgname[13]=a_src;last=layer_no;
			document.images["ImgChar"+layer_no].src=AvatarImgPath+a_src;	
			makeBlank(8);//프론트헤어
			makeBlank(9);//얼굴	
			makeBlank(10);//상의
			makeBlank(12);//하의
			makeBlank(15);//신발
			makeBlank(16);//뒷헤어
			makeBlank(17);//테마의상
		break;		
		case("17")://테마의상:앞헤어, 얼굴, 상의 하의 , 뒤헤어를 삭제
			current_imgname[17]=a_src;last=layer_no;
			document.images["ImgChar"+layer_no].src=AvatarImgPath+a_src;
			makeBlank(8);//프론트헤어	
			makeBlank(9);//얼굴	
			makeBlank(10);//상의
			makeBlank(12);//하의
			makeBlank(13);//한벌의상
			makeBlank(15);//신발
			makeBlank(16);//뒷헤어
		break;										
		default: 
		//alert(layer_no+','+a_src);
			document.images["ImgChar"+layer_no].src=AvatarImgPath+a_src;
			current_imgname[layer_no] = a_src;
			last=layer_no;
		break; 
	} 
}

function changeAvatarFace(item_no,layer_no){
	if(layer_no == "9" || layer_no == "13" || layer_no == "17"){  
		createXMLHttpRequest();
		var url = "./wizavatar/avatarProc.php";
		var queryString = "mode=getAvatarFace&item_no="+item_no+"&layer_no="+layer_no;
		xmlHttp.open("POST", url, true);
		xmlHttp.onreadystatechange = changeAvatarFaceResult;
		xmlHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");    
		xmlHttp.send(queryString);
	}	
}	

function changeAvatarFaceResult(){
	alert(xmlHttp.readyState)
    if(xmlHttp.readyState == 4) {
        if(xmlHttp.status == 200) {
			var item_no = xmlHttp.responseXML.getElementsByTagName("item_no")[0].firstChild.data;	
			alert(item_no);
			//changeFaceBox('<?=$avatar->item_id;?>','<?=$avatar->facelayer?>',faceimg0,faceimg1)				
        }else{
			alert('./wizavatar/avatarPorc.php\n접속실패(2)');
		}
    }
}

function makeBlank(layer_no){
	current_imgname[layer_no]="";
	document.images["ImgChar"+layer_no].src=AvatarImgPath+"default_blank.gif";
	//alert(layer_no+','+document.images["ImgChar"+layer_no].src);
}

function changeAllFace(item_no,layer_no){
	// layer_no : 13: 한벌의상, 9:얼굴, 17: 테마의상 일경우 모든 표정값을 바꾼다.
	if(layer_no == "13" || layer_no == "9" || layer_no == "17"){
		createXMLHttpRequest();
		var url = "./wizavatar/avatarProc.php";
		var mode = "avatarTmpReset";
		var queryString = "mode=changeAllFace&item_no="+item_no;
		xmlHttp.open("POST", url, true);
		xmlHttp.onreadystatechange = handleStatechangeAllFace;
		xmlHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");    
		xmlHttp.send(queryString);
	}
}

function handleStatechangeAllFace() {
    if(xmlHttp.readyState == 4) {
        if(xmlHttp.status == 200) {
			var ImgFace1 = xmlHttp.responseXML.getElementsByTagName("ImgFace1")[0].firstChild.data;
			var ImgFace2 = xmlHttp.responseXML.getElementsByTagName("ImgFace2")[0].firstChild.data;
			var ImgFace3 = xmlHttp.responseXML.getElementsByTagName("ImgFace3")[0].firstChild.data;
			var ImgFace4 = xmlHttp.responseXML.getElementsByTagName("ImgFace4")[0].firstChild.data;
			var ImgFace5 = xmlHttp.responseXML.getElementsByTagName("ImgFace5")[0].firstChild.data;
			if(result == "1"){
				//alert(layer_no+","+gender);
				take_off(a_src,layer_no,gender,item_no);
				location.reload();
			}
        }else{
			alert('./wizavatar/avatarPorc.php\n접속실패(3)');
		}
    }
}

function take_off(a_src,layer_no,gender,item_no) {//옷벗기
	origin_src = eval("origin_avatar_"+layer_no+"_src");
	//alert(origin_src+", "+a_src);
	SavePresentAvatar(a_src,layer_no,gender,item_no, 'minus');
	//현재아이템이 테마의상(17) 혹은 한벌의상(13) 일경우 기존 아바타를 모두 복원
	switch(layer_no){
		case "13":
		break;
		case "17":
			origin_ch1(origin_avatar_8_src,8);//프론트헤어
			origin_ch1(origin_avatar_10_src,10);//상의
			origin_ch1(origin_avatar_12_src,12);//하의
			origin_ch1(origin_avatar_9_src,9);//얼굴
			origin_ch1(origin_avatar_15_src,15);//신발
			origin_ch1(origin_src,layer_no);
		break;
		default:
			origin_ch1(origin_src,layer_no);
		break;
	}
}

function take_off_one(a_src,layer_no,gender,item_no) {//옷장에서 옷벗기
	origin_src = eval("origin_avatar_"+layer_no+"_src");
	//내가 입고 있는 아이템에서 제거
	//alert(layer_no);
	document.images["MyAvatarItem"+layer_no].src=AvatarImgPath+"default_blank.gif";
	eval("TakeOffBtn"+layer_no+".style.display='none'");
	//alert(document.images["MyAvatarItem"+layer_no].src)
	//alert(origin_src+", "+a_src);
	SavePresentAvatar(a_src,layer_no,gender,item_no, 'minus');
	//현재아이템이 테마의상(17) 혹은 한벌의상(13) 일경우 기존 아바타를 모두 복원
	makeBlank(layer_no);
	switch(layer_no){
		case "10"://상의(기본아이템으로 복원)
		case "12"://하의(기본아이템으로 복원)
			naked_ch(layer_no)
		break;
		case "9"://얼굴(기본아이템으로 복원)
			makeBlank(16);//뒷헤어를 초기화
			naked_ch(layer_no)
		break;
		case "13":
		case "17":
			makeBlank(layer_no);//
			naked_ch(9);//얼굴
			naked_ch(10);//상의
			naked_ch(12);//하의
		break;
		default:
		break;
	}
	updateCurrentAvatar();//현재 아바타를 기준으로 db 초기화
}

function origin_ch(a_src,layer_no) { // 기본 아바타로 돌리기
	if (layer_no != "" ){
		current_imgname[layer_no]=a_src;
		last=layer_no;
	}

	ImgChar = "ImgChar"+layer_no;
	ava = "ava"+layer_no;
	o_public_ch(layer_no);

	for(h=1; h<=19; h=h+1) {
		item[h]= "";
	}
}

function origin_ch1(a_src,layer_no){  // 이전아바타로 돌리기
	if (layer_no != "" ){
		current_imgname[layer_no]=a_src;
		last=layer_no;
	}

  ImgChar = "ImgChar"+layer_no;
  ava = "ava"+layer_no;
  o_public_ch(layer_no);

  item[layer_no]= "";
}


function naked_ch(layer_no){  // 초기설정 아바타로 돌리기(옷장에서 실행)
	//alert(document.images["ImgChar"+layer_no].src)
	document.images["ImgChar"+layer_no].src=AvatarImgPath+naked_avatar[layer_no];
}

function input_ch(a_src,layer_no){
	take_avatar1(a_src,layer_no);
}

function input_ch1(a_src1,a_src2,layer_no){//얼굴포함
	take_avatar1(a_src1,layer_no);
	if(layer_no == "9") take_avatar1(a_src2,'16');
}
function buy_item(item_no){
	var items = "";
	
	if(item_no){//아바타샵에서 한개씩 구매일경우
		url = "<?=$avatar_skin_path?>/avatar_buy_item.php?item="+item_no;
		wizwindow(url, 'ItemWindow', 'width=360, height=400, scrollbars=no, resizable=no');
	}else{//현재 착용한 아이템 구매일 경우
		for(h=1; h<=19; h++) {
			if(item[h]) items = items + item[h]+"-";
		}
		if(!items){
			alert ("장착한 아이템이 없습니다.");
		}else{ 
			url = "<?=$avatar_skin_path?>/avatar_buy_item.php?item="+items;
			wizwindow(url, 'ItemWindow', 'width=380, height=450, scrollbars=yes, resizable=no');
		}
	}
}

function buy_item_pop(item_no){
	url = "./avatar_buy_item.php?item="+item_no;
	wizwindow(url, 'ItemWindow', 'width=360, height=400, scrollbars=no, resizable=no');
}

function present_item(item_no, my_item_no,ly) {
	url = "<?=$avatar_skin_path?>/avatar_present_item.php?item_no="+item_no+"&my_item_no="+my_item_no;
	if(!my_item_no){
		wizwindow(url, 'ItemWindow', 'width=360, height=450, scrollbars=no, resizable=no');
	}else{
		wizwindow(url, 'ItemWindow', 'width=360, height=350, scrollbars=no, resizable=no');
	}
}

function present_item_pop(item_no) {
	url = "./avatar_present_item.php?item_no="+item_no;
	wizwindow(url, 'ItemWindow', 'width=360, height=450, scrollbars=no, resizable=no');
}

function zzim_item(item_no){
	url = "<?=$avatar_skin_path?>/avatar_pop.php?mode=zzim&item_no="+item_no;
	wizwindow(url, 'ZZimWindow', 'width=512, height=400, scrollbars=1, resizable=no');
}

function viewPresentWindow(mode){
	url = "<?=$avatar_skin_path?>/avatar_pop.php?mode="+mode
	wizwindow(url, 'ZZimWindow', 'width=512, height=400, scrollbars=1, resizable=no');
}

function sale_item(item_no, my_item_no, ly){//아이템판매
	url = "<?=$avatar_skin_path?>/avatar_sale_item.php?item_no="+item_no+"&my_item_no="+my_item_no+"&layer="+ly;
	wizwindow(url, 'ItemWindow', 'width=360, height=340, scrollbars=no, resizable=no');
}

function Item_del(item_no, my_item_no, ly) {
	if(confirm('선택하신 아이템을 삭제하시겠습니까?')){
		createXMLHttpRequest();
		var url = "./wizavatar/avatarProc.php";
		var mode = "avatarTmpReset";
		var queryString = "mode=del&item_no="+item_no+"&my_item_no="+my_item_no+"&layer="+ly;
		xmlHttp.open("POST", url, true);
		xmlHttp.onreadystatechange = handleStateChangeResult;
		xmlHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");    
		xmlHttp.send(queryString);
	}
}

function handleStateChangeResult() {
    if(xmlHttp.readyState == 4) {
        if(xmlHttp.status == 200) {
			var result = xmlHttp.responseXML.getElementsByTagName("result")[0].firstChild.data;
			var layer_no = xmlHttp.responseXML.getElementsByTagName("layer_no")[0].firstChild.data;
			var gender = xmlHttp.responseXML.getElementsByTagName("gender")[0].firstChild.data;
			var item_no = xmlHttp.responseXML.getElementsByTagName("item_no")[0].firstChild.data;
			if(result == "1"){
				//alert(layer_no+","+gender);
				take_off(a_src,layer_no,gender,item_no);
				location.reload();
				
			}
        }else{
			alert('./wizavatar/avatarPorc.php\n접속실패(4)');
		}
    }
}


function Movepage(pagenum){//페이지 이동에 관한 함수
	//현재 저장된 정보를 세션에 저장
	location.href = pagenum;
}


///////////////////////////////// Ajax관련 시작
var xmlHttp;

function createXMLHttpRequest() {
	if (window.ActiveXObject) {
		xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
	} 
	else if (window.XMLHttpRequest) {
		xmlHttp = new XMLHttpRequest();                
	}
}

function updateCurrentAvatar() {//현재 아바타로 모든 것을 초기화
	createXMLHttpRequest();
	//현재 입고 있는 정보를 배열에 저장
	
	for(i=1; i<=19; i++){
		tmpArr[i] = document.images["ImgChar"+i].src;
	}

	var url = "/wizavatar/avatarProc.php";
	var queryString = "mode=InitialUpdate&fullsrc[1]=" + tmpArr[1] + "&fullsrc[2]=" + tmpArr[2] + "&fullsrc[3]=" + tmpArr[3] + "&fullsrc[4]=" + tmpArr[4] + "&fullsrc[5]=" + tmpArr[5] + "&fullsrc[6]=" + tmpArr[6] + "&fullsrc[7]=" + tmpArr[7] + "&fullsrc[8]=" + tmpArr[8] + "&fullsrc[9]=" + tmpArr[9] + "&fullsrc[10]=" + tmpArr[2] + "&fullsrc[10]=" + tmpArr[2] + "&fullsrc[11]=" + tmpArr[11] + "&fullsrc[12]=" + tmpArr[12] + "&fullsrc[13]=" + tmpArr[13] + "&fullsrc[14]=" + tmpArr[14] + "&fullsrc[15]=" + tmpArr[15] + "&fullsrc[16]=" + tmpArr[16] + "&fullsrc[17]=" + tmpArr[17] + "&fullsrc[18]=" + tmpArr[18] + "&fullsrc[19]=" + tmpArr[19];
	//alert(queryString);
	xmlHttp.open("POST", url, true);
	xmlHttp.onreadystatechange = handleStateChange;
	xmlHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");    
	xmlHttp.send(queryString);
}

function SavePresentAvatar(a_src,layer_no,gender,item_no,flag) {
	createXMLHttpRequest();
	var url = "/wizavatar/avatarProc.php";
	var queryString = "mode=avatarTmpSave&a_src="+a_src + "&layer_no="+layer_no + "&gender="+gender + "&item_no="+item_no + "&flag="+flag;
	xmlHttp.open("POST", url, true);
	xmlHttp.onreadystatechange = handleStateChange;
	xmlHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");    
	xmlHttp.send(queryString);
}



function ResetPresentAvatar() {
	createXMLHttpRequest();
	var url = "/wizavatar/avatarProc.php";
	var mode = "avatarTmpReset";
	var queryString = "mode="+mode;
	xmlHttp.open("POST", url, true);
	xmlHttp.onreadystatechange = handleStateChange;
	xmlHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");    
	xmlHttp.send(queryString);
}

function handleStateChange() {
    if(xmlHttp.readyState == 4) {
        if(xmlHttp.status == 200) {
			//alert('세션성공');
        }else{
			alert('./wizavatar/avatarPorc.php\n접속실패(5)');
		}
    }
}



///////////////////////////////// Ajax관련 끝

function setAvatarCookie( name, value, expiredays){ 
        var todayDate = new Date(); 
        todayDate.setDate( todayDate.getDate() + expiredays ); 
        document.cookie = name + "=" + escape( value ) + "; path=/; expires=" + todayDate.toGMTString() + ";" 
} 

function getAvatarCookie( name ) {        
	var nameOfCookie = name + "=";
	var x = 0;
	while ( x <= document.cookie.length ){
		var y = (x+nameOfCookie.length);
		if ( document.cookie.substring( x, y ) == nameOfCookie ) {
			if ( (endOfCookie=document.cookie.indexOf( ";", y )) == -1 ) 
			endOfCookie = document.cookie.length; 
			return unescape( document.cookie.substring( y, endOfCookie ) ); 
		}
		x = document.cookie.indexOf( " ", x ) + 1;
		if ( x == 0 )
		break;
	}
	return "";
}
