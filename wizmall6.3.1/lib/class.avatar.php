<?
//class Avatar_Class{
class avatar{
	var $totalcnt=0;
	var $num_rows = 0;
	var $my_layer = 0;
	var $user_gender = 0;
	var $user_point = "";
	var $user_grade = "";
	var $user_id = "";	
	var $result = 0;
	var $item_no = 0;	
	var $avatarpath = "";
	var $avatar_no = "";
	var	$mode = "";
	var $WIZTABLE = array(); 
	var $avatarimg = array();
	var $cfg = array();
	var $items = array();//xml용
	var $tmp = ""; //임시변수용

	
## 다중 클라스 함수 호출용
	function get_object(&$dbcon=NULL, &$common=NULL, &$xml=NULL){//db_connection 함수 불러오기
		if($dbcon != NULL) $this->dbcon	= &$dbcon;
		if($common != NULL) $this->common	= &$common;
		if($xml != NULL) $this->xml	= &$xml;
	}	
/*		
	function Avatar_Class($dbhost, $dbname, $dbuser, $dbpwd){
		$this->MYSQL_HOST=$dbhost;
		$this->MYSQL_DB = $dbname;
		$this->MYSQL_ID = $dbuser;
		$this->MYSQL_PASSWORD = $dbpwd;
	}
	
	function db_connect(){
		$this->dbcon=mysql_connect($this->MYSQL_HOST,  $this->MYSQL_ID, $this->MYSQL_PASSWORD);
		mysql_select_db($this->MYSQL_DB, $this->dbcon);
		if ( !$this->dbcon ) {
			echo "mysql 데이터 베이스에 연결할 수 없습니다."; 
			exit;
		}	
	}
	
	function dberror($str){
		die($str."<br>".mysql_error());
	}
	
	function js_alert($str, $goto=null){
		if($goto == "cur"){
			echo "<script>alert('$str');</script>";
			return false;
			exit;
		}else if($goto == "close"){
			echo "<script>alert('$str');self.close();</script>";
			return false;
			exit;
		}else{
			echo "<script>alert('$str');history.go(-1);</script>";
			return false;
			exit;
		}
	}	
####################################################################################
#### XML관련 클라스 모음 
####################################################################################
	function outputXml(){
		header("Content-type: text/xml");
		printf("<?xml version=\"1.0\" encoding=\"%s\" ?>\n","EUC-KR");
		print("<rss version=\"2.0\">\n");

		$this->printChannel();

		print("</rss>\n");
	}
	
	function printChannel(){
		foreach($this->items as $item){
		//print_r($item);
			print("<channel>\n");
			while (list($name,$value) = each($item)) {
				//echo "name=".$item[$name]."<br>";
				//if(!empty($item[$name])){ 
					$value = htmlspecialchars($value);
					printf("<%s>%s</%s>\n",$name,$value,$name); 
				//}
			}
			print("</channel>\n");
		}
	}

	
	function addItem($item){
	//echo $item;
		array_push($this->items,$item);
		//$this->items=$item;
	}
	*/
		
####################################################################################
#### 아바타 초기화 하기 : 신규회원가입일경우
####################################################################################
	function InitAvatar($meminfo) {
	//아바타 초기화($member->meminfo : 상기 $member->login_check 중 start_login 에 이 변수가 발생
	//$meminfo는 array로 각각 다음값을 가진다.
	//mpasswd : 패스워드, mid: 아이디, mgrade : 등급, mname : 이름, mgrantsta : 허용상태, mpoint : 포인트, gender : 성별;
		$this->deleteAllSessionFile($meminfo["mid"]);
		
		$ava17 = $ava9 = $ava12 = $ava10 = 0;
		$userid = $meminfo["mid"];
		$gender = $meminfo["gender"];
		$username = $meminfo["mname"];
		$userpoint = $meminfo["mpoint"];
		$usergrade = $meminfo["mgrade"];
		$sqlstr = "select count(*) from ".$this->WIZTABLE["AVATARMEMCONFIG"]." where user_id = '$userid'";
		$count = $this->dbcon->get_one($sqlstr);
		if(!$count){//AVATARMEMCONFIG 테이블에 값이 존재 하지 않을경우 기본값을 넣어준다.
			//성별, 등급에 따라 기본 의상을 따로 둔다.
			## 기본아바타 정의
			## 1:남자기본얼굴, 2:남자기본상체, 3:남자기본하체, 
			## 4:여자기본얼굴, 5:여자기본상체, 6:여자기본하체	
			## 7:기본테마(남학생), 8:기본테마(여학생), 9:기본테마(남), 10:기본테마(여), 11:기본테마(남선생), 12:기본테마(여선생)	
		/*
			switch($gender){
				case "1"://남성
					switch($usergrade){
						case "9"://학생신분
							$ava9 = "1";//남자기본얼굴
							$ava10 = "2";//남자기본상체
							$ava12 = "3";//남자기본하체
							$ava17 = "19";
						break;
						case "7"://학부모신분
							$ava9 = "7";//남자기본얼굴
							$ava10 = "8";//남자기본상체
							$ava12 = "9";//남자기본하체
							$ava17 = "21";
						break;
						case "5"://선생신분
							$ava9 = "13";//남자기본얼굴
							$ava10 = "14";//남자기본상체
							$ava12 = "15";//남자기본하체
							$ava17 = "23";
						break;
						default:
							$ava9 = "1";//남자기본얼굴
							$ava10 = "2";//남자기본상체
							$ava12 = "3";//남자기본하체
							$ava17 = "19";
						break;									
					}
				break;
				case "2"://여성
					switch($usergrade){
						case "9"://학생신분
							$ava9 = "4";//여자기본얼굴
							$ava10 = "5";//여자기본상체
							$ava12 = "6";//여자기본하체
							$ava17 = "20";
						break;
						case "7"://학부모신분
							$ava9 = "10";//여자기본얼굴
							$ava10 = "11";//여자기본상체
							$ava12 = "12";//여자기본하체
							$ava17 = "22";
						break;
						case "5"://선생신분
							$ava9 = "16";//여자기본얼굴
							$ava10 = "17";//여자기본상체
							$ava12 = "18";//여자기본하체
						break;
						default:
							$ava9 = "4";//여자기본얼굴
							$ava10 = "5";//여자기본상체
							$ava12 = "6";//여자기본하체
							$ava17 = "24";

						break;									
					}
				break;
				default:
					$ava9 = "1";//남자기본얼굴
					$ava10 = "2";//남자기본상체
					$ava12 = "3";//남자기본하체	
					$ava17 = "19";		
				break;		
			}
			*/
	/*		if ( $sex == "M" )
{
	$default = array ( 0,0,1,4,3,5,0,7,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,medal($point),0,0,0,0,0,0,0,0,0,0,0 );
} else if ( $sex == "F" ){ 
	$default = array ( 0,0,2,13,12,6,0,8,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,medal($point),0,0,0,0,0,0,0,0,0,0,0 );	
}

	function medal($exp)
	{
		if ( $exp <= 839  ) {
			$no = 26;
		}else if ( $exp <= 2359  ) {
			$no = 528;		
		}else if ( $exp <= 5459  ) {	
			$no = 529;		
		}else if ( $exp <= 11039  ) {	
			$no = 530;		
		}else if ( $exp <= 20215  ) {	
			$no = 89;		
		}else if ( $exp <= 34319  ) {	
			$no = 531;		
		}else if ( $exp <= 58336  ) {	
			$no = 532;		
		}else if ( $exp <= 100805  ) {	
			$no = 533;		
		}else if ( $exp <= 174193  ) {	
			$no = 534;		
		}else if ( $exp <= 301006  ) {	
			$no = 535;		
		}else if ( $exp <= 520140  ) {	
			$no = 536;		
		}else if ( $exp <= 898802  ) {	
			$no = 538;		
		}else if ( $exp <= 1553131  ) {	
			$no = 537;		
		}else if ( $exp >= 1553132  ) {	
			$no = 90;		
		}
		
		return $no ;
	}
	*/
			$useravatar = $this->blanklayer($gender);		
			$sqlstr = "insert into ".$this->WIZTABLE["AVATARMEMCONFIG"]."";
			$sqlstr .= " (user_id,name,point,gender,avatar) ";
			$sqlstr .= " values ('$userid','$username','$userpoint','$gender','$useravatar')";
			$this->dbcon->_query($sqlstr);
			
			## 기본 선물아이템 넣기
			if($ava17){
				//$this->inputwardrobe($userid,$ava17);
			}
		}
	}
	//$ava17 = $ava9 = $ava10 = $ava13 = 0;

	function blanklayer($gender=null){
		$blnaklayer = "";
		//echo "여기";
		//print_r($this->cfg["avatar"]["layer"]);
		//echo "여기:".sizeof($this->cfg["avatar"]["layer"]);
		//echo "getlayercnt:".$this->getlayercnt();
		for($i=0; $i< $this->getlayercnt()-1;$i++) $blnaklayer .=",";

		switch($gender){
			case "2"://여성
				//$useravatar = ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";
			break;
			default:
				//$useravatar = ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,";	
			break;		
		}	
		return $blnaklayer;
	}
	
	function getnaked(){
		$iniarr = $this->getinit();//초기 값을 가져온다.
		$blankarr = explode(",", $this->blanklayer());//초기 값을 가져온다.
	
		foreach($blankarr as $key=>$value) $blankarr[$key] = $this->getavatarImg($iniarr[$key], 1);
		return implode(",", $blankarr);
	}
	
	function getlayercnt(){//현재 config/avatar_array.php에 설정된 레이어의 크기 값을 구한다.
		return sizeof($this->cfg["avatar"]["layer"]);
	}
	
####################################################################################
####
####################################################################################
	function getavatarImg($no, $flag = 0){##no를 이미지로 변경
		#flag = 1 : 실제아바타, 0 : 아바타이미지
		$path = $this->cfg["avatar"]["avatarpath"];
		if($no){
			if ( $flag == 1 ) return 	$path."avatar/".$this->en_name($no);
			else return 	$path."avatarpreview/".$this->en_name($no);
		}else{
			return $path."default_blank.gif";
			//blank 이미지 출력
		}
	}
	
	function getavatarNo($img, $flag = 1){## img를 아바타로 변경
		## flag 0 : 아바타 view, 1 : 실아바타
		$path = $this->cfg["avatar"]["avatarpath"];
		$tmp1 = str_replace($path."avatar/","",$img);
		$tmp1 = str_replace($path."default_blank.gif","",$tmp1);
		$rtn = ($tmp1 == "default_blank.gif")? "":$this->de_name($tmp1);
		return $rtn;
	}	
	
	function en_name($name){//아바타의 이름을 암호화
		return base64_encode("wizavatar_".$name);
	}
	
	function de_name($name){//아바타의 이름을 암호화
		$tmp = base64_decode($name);
	//	echo "tmp = $tmp <br>";
		return str_replace("wizavatar_", "", $tmp);
	}	
	function move_file($imgname, $no, $rootpath="../../"){
	#$imgname 0 : 디스플레이용 , 1: 실제아바타 , 2: 뒷헤어
		
		$path = $rootpath."config/wizavatar/avatarimg/";
		//print_r($imgname);
		//echo $path.$imgname[0];
	
		if(is_file($path.$imgname[0])){
			copy($path.$imgname[0], $path."avatarpreview/".$this->en_name($no));
			unlink($path.$imgname[0]);
		}
		if(is_file($path.$imgname[1])){
			copy($path.$imgname[1], $path."avatar/".$this->en_name($no));
			unlink($path.$imgname[1]);
		}	
			//exit;
		##뒷헤어는 다음에 추가	
	}
	/*
	function getavatarImg($no, $orderflag = 1){
		#orderflag = 0 : 실제아바타, 1 : 아바타이미지
		if($no){
			$this->avatarimg = array();
			$sqlstr = "select filename1, filename2, filename3 from ".$this->WIZTABLE["AVATARITEM"]." where no = '$no'";
			$list = $this->dbcon->get_row($sqlstr);
			$this->avatarimg[0] = $list["filename1"]?$list["filename1"]:"default_blank.gif";
			$this->avatarimg[1] = $list["filename2"]?$list["filename2"]:"default_blank.gif";
			$this->avatarimg[2] = $list["filename3"]?$list["filename3"]:"default_blank.gif";
		}else{
			$this->avatarimg[0] = "default_blank.gif";
			$this->avatarimg[1] = "default_blank.gif";
			$this->avatarimg[2] = "default_blank.gif";
		}
	}*/
####################################################################################
#### 현재착용한 정보가져오기
####################################################################################
	function getItemNo($no){
		$sqlstr = "select item_no from ".$this->WIZTABLE["AVATARMERCHANT"]." where no = '$no'";
		$this->avatar_no = $this->dbcon->get_one($sqlstr);
	}

####################################################################################
#### 현재착용한 정보가져오기
####################################################################################
	function getMyItem($no){
		$this->getItemNo($no);
		$list = $this->buy_find_no($this->avatar_no);
		return $list;
	}
	function getMyItemInfo($no){
		$sqlstr = "select * from ".$this->WIZTABLE["AVATARMERCHANT"]." where no = '$no'";
		$list = $this->dbcon->get_row($sqlstr);
		return $list;
	}	
	
####################################################################################
#### 아이템의 레이어 정보 가져오기(추후 getItemeach로 대처)
####################################################################################
	function getItemLayer($no){
		$sqlstr = "select layer from ".$this->WIZTABLE["AVATARITEM"]." where no = '$no'";
		//$this->ItemLayer_no = $this->dbcon->get_one($sqlstr);
		return $this->dbcon->get_one($sqlstr);		
	}
	
####################################################################################
#### 아이템의 레이어 각종정보가져오기
####################################################################################
	function getItemeach($no, $field){
		$sqlstr = "select $field from ".$this->WIZTABLE["AVATARITEM"]." where no = '$no'";
		return $this->dbcon->get_one($sqlstr);
	}			
####################################################################################
#### 현재아이템의 기본 정보 가져오기(모두가져오기)
####################################################################################
	function getItemInfo($no){
		$sqlstr = "select * from ".$this->WIZTABLE["AVATARITEM"]." where no = '$no'";
		//echo $sqlstr;
		$list = $this->dbcon->get_row($sqlstr);
		return $list;	
	}	
	
	function buy_find_item($item){//되도록 사용금지
		$sqlstr = "select name, no, buy_p, sale_p from ".$this->WIZTABLE["AVATARITEM"]." where file1 = '$item'";
		$list = $this->dbcon->get_row($sqlstr);
		
		return $list;
	}
	
	function buy_find_no($no){//getItemInfo것으로 추후 대처
		$sqlstr = "select * from ".$this->WIZTABLE["AVATARITEM"]." where no = '$no'";
		$list = $this->dbcon->get_row($sqlstr);
		return $list;
	}	
####################################################################################
#### 내옷장의 no 정보로서 실제 아바타아이템의 고유 키값을 가져온다.
####################################################################################
	function buy_find_myno($no){
		$this->getItemNo($no);
		$sqlstr = "select * from ".$this->WIZTABLE["AVATARITEM"]." where no = '".$this->avatar_no."'";
		$list = $this->dbcon->get_row($sqlstr);
		return $list;
	}	
		
####################################################################################
#### 아이템 착용하기
####################################################################################
	function InputMyItem($no, $userid){
		$layer_no = $this->getItemLayer($no);
		$useravatar = $this->getmyavatar($userid);//현재 아바타 정보를 배열로 가져온다
		$useravatar[$layer_no] = $no;
		if(!$layer_no)$common->js_alert('레이어가 존재 하지 않습니다.','alert');
		//echo "($layer_no, $no) ";
		$new_avatar = implode(",", $useravatar);
		$sqlstr = "update ".$this->WIZTABLE["AVATARMEMCONFIG"]." set avatar = '$new_avatar' where user_id = '$userid'";
		$this->dbcon->_query($sqlstr);
			/*		
		$this->LayerFieldName = "ava".$layer_no;
		if($layer_no == "13" || $layer_no == "17"){
		/*
			$tmpgender = $this->getavatarmeminfo2($userid, "gender");
			$gender = $tmpgender ? $tmpgender:"1";
			
			switch($layer_no){
				case "13"://한벌의상
					if($gender = "1"){
						$ava9 = "1";
						$ava10 = "2";
						$ava12 = "3";
					}else{
						$ava9 = "4";
						$ava10 = "5";
						$ava12 = "6";
					}
				break;
				case "17":// 테마의상
					if($gender = "1"){
						$ava9 = "1";
						$ava10 = "2";
						$ava12 = "3";
					}else{
						$ava9 = "4";
						$ava10 = "5";
						$ava12 = "6";
					}
				break;		
			}
			*//*
			
			$sqlstr = "update ".$this->WIZTABLE["AVATARMEMCONFIG"]." set ".$this->LayerFieldName." = '$no', ava9='0', ava10='0', ava12='0', ava16='0' where user_id = '$userid'";
			$this->dbcon->_query($sqlstr);
//		}else if($layer_no=="9"){//얼굴이면 뒷헤어정보도 가져와 update
		##헤어정보 가져오기
//			$sqlstr = "update ".$this->WIZTABLE["AVATARMEMCONFIG"]." set ".$this->LayerFieldName." = '$no', ava16='".$this->avatarimg[2]."' where user_id = '$userid'";
//			$this->dbcon->_query($sqlstr);
		}else{
			$sqlstr = "update ".$this->WIZTABLE["AVATARMEMCONFIG"]." set ".$this->LayerFieldName." = '$no' where user_id = '$userid'";
			$this->dbcon->_query($sqlstr);
		}
		*/
	}	
####################################################################################
#### 입고있는 정보를 기준으로 dbupdate 하기
####################################################################################
	function InitialUpdate($fullsrc, $userid){
		for($i=0; $i<40; $i++){
			$tmpava[$i] = str_replace("/", "",strrchr($fullsrc[$i], "/"));
			$sqlstr = "select no from ".$this->WIZTABLE["AVATARITEM"]." where filename2 = '".$tmpava[$i]."'";
			$list = $this->dbcon->get_row($sqlstr);
			$ava[$i] = $list[0]?$list[0]:0;
		}
		/*
		if($ava[13] == 0 || $ava[17] == 0){
	
			$tmpgender = $this->getavatarmeminfo2($userid, "gender");
			$gender = $tmpgender ? $tmpgender:"1";
			switch($gender){
				case "1":
					if($ava[13] == 0){
						if($ava[10] == 0) $ava[10] = 2;
						if($ava[12] == 0) $ava[12] = 3;
						if($ava[9] == 0) $ava[9] = 1;
					}else if($ava[17] == 0){
						if($ava[10] == 0) $ava[10] = 2;
						if($ava[12] == 0) $ava[12] = 3;
						if($ava[9] == 0) $ava[9] = 1;
					}
				break;
				case "2":
					if($ava[13] == 0){
						if($ava[10] == 0) $ava[10] = 5;
						if($ava[12] == 0) $ava[12] = 6;
						if($ava[9] == 0) $ava[9] = 4;
					}else if($ava[17] == 0){
						if($ava[10] == 0) $ava[10] = 5;
						if($ava[12] == 0) $ava[12] = 6;
						if($ava[9] == 0) $ava[9] = 4;
					}				
				break;			
			}
			

		}*/
		
		$sqlstr = "update ".$this->WIZTABLE["AVATARMEMCONFIG"]." set avatar='".$useravatar."' where user_id = '$userid'";
		//echo "sqlstr = $sqlstr <br>";
		$this->dbcon->_query($sqlstr);
	}		
####################################################################################
#### 포인트가져오기
####################################################################################	
	function check_point($userid){
		## 회원테이블에 따라 다양한 포인트 계산하기 default : wizMembers
		if(!$userid){
		echo "<script>alert('아이디가 존재하지 않습니다.')</script>";
		return $point;
		}
		switch ($this->WIZTABLE["MEMBER"]){
			case "wizMembers":##위즈솔루션 사용일경우
				$sqlstr = "select mpoint from ".$this->WIZTABLE["MEMBER"]." where mid ='".$userid."'";
				$point = $this->dbcon->get_one($sqlstr);
			break;				
			default:##회원 db와 연동되지 않을경우 자체 point 테이블에서 가져옮
				$sqlstr = "select sum(point) as mpoint from ".$this->WIZTABLE["AVATARPOINT"]." where id ='".$userid."'  and flag='1'";
				$point = $this->dbcon->get_one($sqlstr);
			break;
		
		}	
	
	  return $point;
	}	
####################################################################################
#### 로그인책크
####################################################################################
	function avatar_login($userid, $avatar_pwd){ //나중에 시간날때..ㅠ.ㅠ
		$this->deleteAllSessionFile($userid);
		switch ($this->WIZTABLE["MEMBER"]){
			case "wizMembers"://wizSolution 사용시
				$sqlstr = "select m.mid, m.mname, m.mgrade, m.mpoint, i.gender, i.jumin2 
							from ".$this->WIZTABLE["MEMBER"]." m
							left join wizMembers_ind i on m.mid = i.id
							where m.mid ='".$userid."' and m.mpasswd='".$avatar_pwd."'";
				$list = $this->dbcon->get_row($sqlstr);
				$this->user_id = $list["mid"];
				$this->user_gender = $list["gender"];
				$this->user_point = $list["mpoint"];
				$this->user_grade = $list["mgrade"];//등급에 따른 다양한 아바타를 표시하기위해	
				$this->user_name = $list["mname"];		
			break;			
			case "MemberInfo"://사용자정의테이블
				$sqlstr = "select userid, jumin, namekr, grade from ".$this->WIZTABLE["MEMBER"]." where userid ='".$userid."' and userpw ='".$avatar_pwd."'";
				$list = $this->dbcon->get_row($sqlstr);
				$this->user_id = $list["userid"];
				$this->user_grade = $list["grade"];
				$this->user_name = $list["namekr"];
				$tmpgender = substr($list["jumin"], -7, 1);
				if($this->user_id){
					switch($tmpgender){
						case "2":
						case "4":
							$this->user_gender = 2;
						break;
						default:
							$this->user_gender = 1;
						break;
					}
				}			
			break;		
			default:
				$sqlstr = "select user_id, name, gender, point, user_pwd from ".$this->WIZTABLE["AVATARMEMCONFIG"]." where user_id ='".$userid."' and user_pwd='".$avatar_pwd."'";
				$list = $this->dbcon->get_row($sqlstr);
				$this->user_id = $list["user_id"];
				$this->user_gender = $list["gender"];
				$this->user_point = $list["point"];		
				$this->user_name = $list["name"];	

			break;
		}

		//if($this->user_id){
			##경우에 대비하여 세션과 쿠키값을 동시 생성
			//$str = $avatar_point."|".$user_gender."|".$avatar_grade."|".$userid;	
			$str = $this->check_point($userid)."|".$this->user_gender."|".$this->user_grade."|".$userid."|".$avatar_name;	
			$_SESSION["wizavatar"] = $str;
			//setcookie("wizavatar", "$str", 0, "/");
			//echo $str;
		   // exit;
		//}
	}	
####################################################################################
####  회원정보가져오기(이름)
####################################################################################
	function getlogininfo($wizavatar=null, $userid=null){
		if(!$wizavatar){
			$wizavatar = $_SESSION["wizavatar"];
			$tmp = split("\|", $wizavatar);
			$this->user_point = $tmp[0];
			$this->user_gender = $tmp[1];
			$this->user_grade = $tmp[2];
			$this->user_id = $tmp[3];
			$this->user_name = $tmp[4];
		}else if($wizavatar){## wizMember의 로그인 시스템과 연동(common class 의 getLogininfo() 참조)
			$this->user_point = $wizavatar["mpoint"];
			$this->user_gender = $wizavatar["mgender"];
			$this->user_grade = $wizavatar["mgrade"];
			$this->user_id = $wizavatar["mid"];
			$this->user_name = $wizavatar["mname"];
		}

	}

	function get_MemInfo($userid, $flag){
		##$flag : 가져올 필드를 입력 (name, id, passwd, gender....)

		switch($flag){
			case "name":
				switch ($this->WIZTABLE["MEMBER"]){
					case "MemberInfo":
						$sqlstr = "select namekr from ".$this->WIZTABLE["MEMBER"]." where userid ='".$userid."'";
						$returnvalue = $this->dbcon->get_one($sqlstr);
					break;		
					default:##wizMembers//나중에 처리
						$sqlstr = "select name from ".$this->WIZTABLE["MEMBER"]." where mid ='".$userid."' and mpasswd='".$avatar_pwd."'";
						$returnvalue = $this->dbcon->get_one($sqlstr);
					break;
				
				}
			break;
		}
	
	  return $returnvalue;
	}



	
	function cal_point($f, $s) {
	  $sum = $f - $s;
	  if($sum < 0 ) {	$c_point = "0";}
	  else { $c_point = "1";}
	  
	  return $point = array($sum, $c_point);
	}
####################################################################################
#### 아바타디스플레이
####################################################################################
	
	function show_avatar($userid, $flag=null){
			if ($this->mode == "photo"){//나중에 다시 프로그램
				$list = $this->getavatarmeminfo1($userid);//포토앨범에서 유니크값으로 가져오기
				$layerid = "photoChar";
				$width = "140px";
				$height = "180px";
			}elseif ($this->mode == "sphoto"){//나중에 다시 프로그램
				$list = $this->getavatarmeminfo1($userid);//포토앨범에서 유니크값으로 가져오기
				$layerid = "photoChar";
				$width = "100px";
				$height = "143px";
			}else{
				$layerid = "ImgChar";
				$width = "140px";	
				$height = "180px";
			}	
		if($userid){
			//$iniarr = $this->getinit();//초기 값을 가져온다.
			## 기본 아바타와 현재 아바타를 믹싱한다.
			$useravatar = $this->getshowinit($userid, $flag);
			//print_r($useravatar);
			
			$returnDiv = "<div id=\"character\" style=\"position:relative; width:".$width."; height:".$height."; overflow:hidden;\">\n";
			//$returnDiv = "<div id=\"character\" style=\"position:relative; width:".$width."; height:".$height.";\">\n";
			for($i=0; $i<=$this->getlayercnt(); $i++){
				//$zindex = 40-$i;
				$zindex = $i+1;
				$returnDiv .= "<div id=\"layer".$i."\" style=\"position:absolute; left:0; top:0; z-index:".$zindex."; width:".$width."; height:".$height.";\"><img id=\"$layerid".$i."\" src=\"".$this->getavatarImg($useravatar[$i], 1)."\" border=\"0\" width=\"".$width."\" height=\"".$height."\" /></div>\n";
			}
			$returnDiv .= "</div>\n";
			return $returnDiv;
		}else{//로그인 전이면 디폴터 이미지 출력
			
			$returnDiv = "<div id=\"character\" style=\"position:relative; width:".$width."; height:".$height."; overflow:hidden;\">\n";
				$returnDiv .= "<div id=\"layer".$i."\" style=\"position:absolute; left:0; top:0; z-index:".$zindex."; width:".$width."; height:".$height.";\"><img src=\"".$this->cfg["avatar"]["avatarpath"]."default_no_reg.gif\" border=\"0\" width=\"".$width."\" height=\"".$height."\" /></div>\n";
			$returnDiv .= "</div>\n";	
			return $returnDiv;	
		}
	}


	function getDefault($gender,$type,$grade=null){//버그에 의한 디폴트가 미 디스플레이시 
		//$gender : 1 : 남, 2, 여, $type : face, top, bottom,
		switch($gender){
			case "2"://여성
				switch ($grade){
					case "5"://선생
						switch($type){
							case "face":
								return "default_w_head5.gif";
							break;
							case "top":
								return "default_w_top5.gif";
							break;
							case "bottom":
								return "default_w_bottom5.gif";
							break;							
						}
					break;
					case "7"://학부모
						switch($type){
							case "face":
								return "default_w_head7.gif";
							break;
							case "top":
								return "default_w_top7.gif";
							break;
							case "bottom":
								return "default_w_bottom7.gif";
							break;							
						}					
					break;
					default:
						switch($type){
							case "face":
								return "default_w_head9.gif";
							break;
							case "top":
								return "default_w_top9.gif";
							break;
							case "bottom":
								return "default_w_bottom9.gif";
							break;							
						}						
					break;													
				}
			break;
			default://남성
				switch ($grade){
					case "5"://선생
						switch($type){
							case "face":
								return "default_m_head5.gif";
							break;
							case "top":
								return "default_m_top5.gif";
							break;
							case "bottom":
								return "default_m_bottom5.gif";
							break;							
						}						
					break;
					case "7"://학부모
						switch($type){
							case "face":
								return "default_m_head7.gif";
							break;
							case "top":
								return "default_m_top7.gif";
							break;
							case "bottom":
								return "default_m_bottom7.gif";
							break;							
						}						
					break;
					default:
						switch($type){
							case "face":
								return "default_m_head9.gif";
							break;
							case "top":
								return "default_m_top9.gif";
							break;
							case "bottom":
								return "default_m_bottom9.gif";
							break;							
						}					
					break;													
				}				
			break;
			
		}
	}
####################################################################################
#### 아바타 테마 디스플레이
####################################################################################
	
	function show_avatar_theme($ref_item){
		$ref_item_arr = split("\|", $ref_item);
		// 모든 레이어 초기화
		for($i=0; $i<$this->avatar->getlayercnt(); $i++){
			$useravatar[$i] = "default_blank.gif";
		}
		
		
		foreach($ref_item_arr as $key=>$value){
			$list = $this->getThemInfo($value);
			$layerno = $list["layer"];
			$imgno = $list["filename2"];
			$useravatar[$layerno] = $imgno;
		}
		

		$returnDiv = "<DIV id=\"themecharacter\" style=\"position:relative; width:140; height:200; overflow:hidden;\">\n";
		for($i=0; $i<$this->avatar->getlayercnt(); $i++){
			$zindex = 20-$i;
			$returnDiv .= "<div id=\"themelayer".$i."\" style=\"position:absolute; left:0; top:0; z-index:".$zindex.";\"><img id=\"themeImgChar".$i."\" src=\"".$this->cfg["avatar"]["avatarpath"].$useravatar[$i]."\" border=\"0\" width=\"140\" height=\"200\"></div>\n";
		}
		$returnDiv .= "</DIV>\n";
		return $returnDiv;
	}
	
	function getThemInfo($no){
		$sqlstr = "select layer, filename2 from ".$this->WIZTABLE["AVATARITEM"]." where no = '$no'";
		$list = $this->dbcon->get_row($sqlstr);
		return $list;
	}		
####################################################################################
#### 아바타표정디스플레이
####################################################################################
	function getFaceList($item_id, $layer_no=null){
		$sqlstr = "select * from ".$this->WIZTABLE["AVATARFACE"]." where item_id = '$item_id'";
		$list = $this->dbcon->get_row($sqlstr);
		if($layer_no) $this->facelayer = $layer_no;
		$facelist[0][0] = $this->facelayer;
		$facelist["i"][1] = $list["face01"];
		$facelist["a"][1] = $list["face01a"];
		$facelist["i"][2] = $list["face02"];
		$facelist["a"][2] = $list["face02a"];
		$facelist["i"][3] = $list["face03"];
		$facelist["a"][3] = $list["face03a"];
		$facelist["i"][4] = $list["face04"];
		$facelist["a"][4] = $list["face04a"];
		$facelist["i"][5] = $list["face05"];
		$facelist["a"][5] = $list["face05a"];
		$this->item_id = $item_id;
		return $facelist;
	}
	
	function getFaceList1(){
		return $this->getFaceList($this->faceid);
	}
	
	function getFaceImgName($item_id, $no){
		$fieldname = "face0".$no."a";
		$sqlstr = "select $fieldname from ".$this->WIZTABLE["AVATARFACE"]." where item_id = '$item_id'";
		$rtn = $this->dbcon->get_one($sqlstr);
		return $rtn;
	}	
####################################################################################
#### 입고있는 아바타 정보가져오기
####################################################################################
	function getavatarmeminfo($userid){//추후 아래것으로 대처
		$sqlstr = "select gender,avatar from ".$this->WIZTABLE["AVATARMEMCONFIG"]." where user_id = '$userid'";
		$list = $this->dbcon->get_row($sqlstr);
		return $list;
	}
	
	function getmyavatar($userid, $flag=null){//현재 아바타 정보만 가져오기(번호) 배열로 리턴
		##flag s : 세션으로부터 가져오기
		if($flag == "s"){//현재 착용아이템
			$tmp = explode(",", $this->getAvatarSession($userid));
			$path = $this->cfg["avatar"]["avatarpath"];

			foreach($tmp as $key=>$value){
				$tmp1 = str_replace($path."avatar/","",$value);
				$tmp1 = str_replace($path."default_blank.gif","",$tmp1);
				$tmp[$key] = ($tmp1 == "default_blank.gif")? "":$this->de_name($tmp1);
			}
			return $tmp;
		}else{//기본 착용아이템
			$sqlstr = "select avatar from ".$this->WIZTABLE["AVATARMEMCONFIG"]." where user_id = '$userid'";
			$useravatar = $this->dbcon->get_one($sqlstr);
			if($useravatar) return explode(",", $useravatar);
			else{
				return explode(",", $this->blanklayer($gender));//사용자 성별은 다음에 변경
			}
			
		}
	}

	function getmyavatarname($userid){//실 아바타 값 반환
		$rtn = array();
		$avatar_no = $this->getmyavatar($userid);
		foreach($avatar_no as $key=>$value){
			$rtn[$key] = $this->getavatarImg($value, 1);
		}
		return implode(",", $rtn);
	}
	function getshowinitName($userid, $flag=null){
		## flag : s : session 파일로 부터 가져옮
		## 자바스크립트 처리시 ini_imgname 은 기존 테이블에서 curr_imgname 은 세션파일에서 가져옮
		if($flag == "s"){
			return $this->getAvatarSession($userid);
		}else{
			$rtn =  $this->getshowinit($userid, $flag);
			foreach($rtn as $key=>$value){
				$rtn[$key] = $this->getavatarImg($value, 1);
			}
			return implode(",", $rtn);
		}
		
	}	
		
	function getavatarcnt($userid){//현재 착용중인 아바타 갯수 구하기
		$useravatar = $this->getmyavatar($userid);
		$cnt=0;
		foreach($useravatar as $value){
			if($value) $cnt++;
		}
		return $cnt;
	}	
	
	function gethavecnt($userid){//현재 보관중인(옷장) 아바타 갯수 구하기
		$sqlstr = "SELECT count(a.no) FROM ".$this->WIZTABLE["AVATARMERCHANT"]." a where a.user_id = '$userid'";
		return $this->dbcon->get_one($sqlstr);
	}	
	
	function getavatarmeminfo1($no){	
		$sqlstr = "select avatar from ".$this->WIZTABLE["AVATARALBUM"]." where no = '$no'";
		$list = $this->dbcon->get_row($sqlstr);
		return $list;
	}

	function getavatarmeminfo2($userid, $field){//no값 반환//getmyavatar와 비슷
		$sqlstr = "select $field from ".$this->WIZTABLE["AVATARMEMCONFIG"]." where user_id = '$userid'";
		return $this->dbcon->get_one($sqlstr);
	}
		
		

####################################################################################
#### 포인트관련
####################################################################################
	//function PointInsert($userid, $uid=null, $detail, $point, $flag=1, $mode="insert"){
	function PointInsert($userid=null){
		$mode = $this->mode ? $this->mode : "insert";
		##delete는 관리자 모드에서 포인트 삭제시 실행
		$flag = $this->flag ? $this->flag : 1;
		if(!$userid) $userid = $this->user_id;
		$content = $this->content;
		$point = $this->point;
		$uid = $this->uid;
		$wdate = time();
		switch ($this->WIZTABLE["MEMBER"]){
			case "wizMembers"://위즈솔루션과연동
				if($mode == "delete"){
					##기존 포인트 정보를 가져온다.
					$sqlstr = "select point, flag, id from ".$this->WIZTABLE["AVATARPOINT"]." where uid = '$uid'";
					$list = $this->dbcon->get_row($sqlstr);
					$point = $list["point"];
					$userid = $list["id"];
					
					##기존 포인트 정보삭제
					$sqlstr = "delete from ".$this->WIZTABLE["AVATARPOINT"]."  where uid = '$uid'";
					$this->dbcon->_query($sqlstr);
						
					##회원테이블의 포인트 업데이트
					$sqlstr = "update ".$this->WIZTABLE["MEMBER"]." SET mpoint=mpoint - $point where mid = '$userid'";
					$this->dbcon->_query($sqlstr);
				}else{		
					$sqlstr = "insert into wizPoint (id, contents, point,flag,wdate) values ('$userid','$content','$point','$flag','$wdate')";
					$this->dbcon->_query($sqlstr);
					
					if($flag <> "0"){//포인트신청일경우
						$sqlstr = "update ".$this->WIZTABLE["MEMBER"]." SET mpoint=mpoint + $point where mid = '$userid'";
						$this->dbcon->_query($sqlstr);
					}
				}
			break;
			case "userMemberTable"://사용자정의테이블	
				//사용자정의일경우 이곳에 코딩
				//위의 userMemberTable 을 config 에서 정의된 파일명으로 대처후 코딩시작
			break;							
			default:##기본처리
				if($mode == "delete"){
					##기존 포인트 정보를 가져온다.
					$sqlstr = "select point, flag, id from ".$this->WIZTABLE["AVATARPOINT"]." where uid = '$uid'";
					$list = $this->dbcon->get_row($sqlstr);
					$point = $list["point"];
					$userid = $list["id"];
					
					##기존 포인트 정보삭제
					$sqlstr = "delete from ".$this->WIZTABLE["AVATARPOINT"]."  where uid = '$uid'";
					$this->dbcon->_query($sqlstr);
					
					##회원테이블의 포인트 업데이트
					$sqlstr = "update ".$this->WIZTABLE["AVATARMEMCONFIG"]." SET point=point - $point where user_id = '$userid'";
					$this->dbcon->_query($sqlstr);
				}else{
					$sqlstr = "insert into wizPoint (id, contents, point,flag,wdate) values ('$userid','$content','$point','$flag','$wdate')";
					$this->dbcon->_query($sqlstr);
					if($flag <> "0"){//포인트신청일경우
						$sqlstr = "update ".$this->WIZTABLE["AVATARMEMCONFIG"]." SET point=point + $point where user_id = '$userid'";
						$this->dbcon->_query($sqlstr);
					}						
				}
			break;
		}
		##세션을 업데이트 한다.
		$this->getlogininfo();
		if($this->user_id == $userid){//세션정보와 현재 아이디 정보가 일치할경우(일치하지 않을 경우는 타인이 포인트 제공)
			$str = $this->check_point($userid)."|".$this->user_gender."|".$this->user_grade."|".$this->user_id;	
			$_SESSION["wizavatar"] = $str;
			setcookie("wizavatar", "$str", 0, "/");
		}
	}	
####################################################################################
#### 회원존재여부
####################################################################################

	function is_member($userid){
		switch ($this->WIZTABLE["MEMBER"]){
			case "MemberInfo"://	
				$sqlstr = "select count(*) from ".$this->WIZTABLE["MEMBER"]." where userid = '$userid'";
				$rtn = $this->dbcon->get_row($sqlstr);
				return $rtn;
			break;		
			default:##wizMembers//나중에 처리
			break;
		}
	}

####################################################################################
#### 동일아바타소유여부
####################################################################################
	function have_item($userid, $item_no){
		$sqlstr = "select count(*) from ".$this->WIZTABLE["AVATARMERCHANT"]." where item_no = '$item_no' and user_id = '$userid'";
		$result = $this->dbcon->get_one($sqlstr);
		if($result){
			return true;
		}else{
			return false;
		}
	}

####################################################################################
#### 특정 테이블의 특정 필드값 가져오기
####################################################################################
	function getEachField($tablename, $fieldname, $where){
		$sqlstr = "select $fieldname from $tablename $where";
		$rtn = $this->dbcon->get_row($sqlstr);
		return $rtn;
	}

####################################################################################
#### 아바타 구매하기
####################################################################################
	function inputwardrobe($userid,$item_no,$p_user_id=null,$flag=null){//옷장에 넣기
		//$flag = shop : 숍에서 구매하여 보내기, $flag = wardrobe : 옷장에서 보내기(선물하기)
		
		##옷장에서 보내기일 경우 현재 구매일을 옷장에 보관된 기일을 기준으로 하고 아닐경우 현재 날짜를 넣는다.
		if($flag == "wardrobe"){
			//echo "flag = $flag <br>";
			$b_date = $this->getEachField($this->WIZTABLE["AVATARMERCHANT"], "b_date", "where item_no = '$item_no' and user_id = '$p_user_id'");
		}else{
			$b_date = time();
		}
		$p_date = time();
		$p_flag = 1;//선물로 받은것

		$sqlstr = "insert into ".$this->WIZTABLE["AVATARMERCHANT"]." (user_id,item_no,b_date,p_flag,p_user_id,p_read,p_date)";
		$sqlstr .= " values ";
		$sqlstr .= " ('$userid','$item_no','$b_date','$p_flag','$p_user_id','$p_read','$p_date')";
		$this->dbcon->_query($sqlstr);
	}
####################################################################################
#### 제고에서 빼기
####################################################################################
	function minusstock($no){
		$sqlstr = "update ".$this->WIZTABLE["AVATARITEM"]." set jaego=jaego-1 where no='$no'";
		$this->dbcon->_query($sqlstr);

	}
	function plusstock($no){
		$sqlstr = "update ".$this->WIZTABLE["AVATARITEM"]." set jaego=jaego+1 where no='$no'";
		$this->dbcon->_query($sqlstr);
	}	
####################################################################################
#### 옷장에서 삭제하기
####################################################################################
	function deletefromwardrobe($my_item_no, $userid){
		$sqlstr = "delete from ".$this->WIZTABLE["AVATARMERCHANT"]." where no='$my_item_no' and user_id = '$userid'";
		$this->dbcon->_query($sqlstr);
	}
	
	
####################################################################################
#### 입고 있는 옷에서 삭제
####################################################################################
	//function deletefrommyon($item_no, $my_item_no, $layer, $userid){
	function deletefrommyon($layerno,$userid){
		## 입고있는 곳의 필드값 확인
		//$layerno = $this->getItemLayer($item_no);
		$useravatar = $this->getmyavatar($userid);
		$useravatar[$layerno] = "";
		$new_avatar = implode(",", $useravatar);
		/*$sqlstr = "select * from ".$this->WIZTABLE["AVATARMEMCONFIG"]." where user_id = '$userid'";
		$sqlqry = $this->dbcon->_query($sqlstr);
		$list = $this->dbcon->_fetch_array($sqlqry, 1);
		foreach($list as $key => $value){
			if($value == $item_no){
				$fieldname = $key;
				break;
			}
		}
		if($fieldname){
		*/
			//$this->result = 1;

			//$this->my_layer = $fieldname;
			//$this->my_layer = str_replace("ava", "", $fieldname);
			//$this->item_no = $item_no;
			$sqlstr = "update ".$this->WIZTABLE["AVATARMEMCONFIG"]." set avatar = '$new_avatar' where user_id = '$userid'";
			//echo $sqlstr;
			$this->dbcon->_query($sqlstr);
		//}
	}	
####################################################################################
#### 포토앨범 저장갯수 구하기
####################################################################################
	function getphotono($userid){
		$sqlstr = "select count(*) from ".$this->WIZTABLE["AVATARALBUM"]." where (user_id = '$userid' and parent = 0 and contest = 0 and view = 0)";
		$rtn = $this->dbcon->get_row($sqlstr);
		return $rtn;
	}
####################################################################################
#### 포토앨범에 저장사기
####################################################################################
	function insertalbum($userid, $memo=null){
		$list = $this->getavatarmeminfo($userid);
		$date = time();
		$sqlstr = "insert into ".$this->WIZTABLE["AVATARALBUM"]." (user_id, date, memo, avatar)";
		$sqlstr .= " values ";
		$sqlstr .= "('$userid',$date,'$memo','$list[avatar]')";
		$rtn = $this->dbcon->_query($sqlstr);
	}

####################################################################################
#### 아바타 세션
####################################################################################
	function sessionproc($flag, $layer_no, $src){
		##flag : plus, minus 
		$this->makeSessionDir();
		if($flag == "plus"){
			$this->makeSessionFile($flag, $layer_no,$src);
		}else{//minus
			$this->deleteSessionFile($layer_no);
		}
	}

	function saveavatar($userid){## 마이아바타 페이지 에서 현재 세션값을 모두 저장
		$this->getSessionDir($userid);
		if(is_file($this->SessionFolder."/sessionfile.php")){
			include $this->SessionFolder."/sessionfile.php";
		}	
		
		$tmp = explode(",", $wizAvatarSession);
		
		foreach($tmp as $key=>$value){
			$no = $this->getavatarNo($value);
			$defaultflag = $this->getItemeach($no, "defaultflag");
			if($defaultflag == "u") $tmp[$key] = $no;
			else $tmp[$key] = "";
		}
	
		$new_avatar = implode(",", $tmp);
		$sqlstr = "update ".$this->WIZTABLE["AVATARMEMCONFIG"]." set avatar = '$new_avatar' where user_id = '$userid'";
		//echo $sqlstr;
		$this->dbcon->_query($sqlstr);
	
	}
	
	function sessionfiletono(){##세션파일을 no로 변경하기
		
		$this->getSessionDir($userid);
		if(is_file($this->SessionFolder."/sessionfile.php")){
			include $this->SessionFolder."/sessionfile.php";
		}	
		$tmp = explode(",", $wizAvatarSession);
		foreach($tmp as $key=>$value){
			
		}
	}

/*
	function getItemnoFromSession($layer_no){
		foreach($_SESSION["tmpItem"] as $key => $value){
			foreach($value as $key1 => $value1){
				if($layer_no == $value1){
					return $item_no;
				}
			}
		}	
	}
	
	function minusSession ($layer_no){
			$tmpItem = $_SESSION["tmpItem"];
			$tmpItem[$layer_no] = "";
			//session_register(tmpItem);
			$_SESSION["tmpItem"] = "";	
	}
	
	function minusItemnoFromSession($layer_no){
		$this->minusSession($this->getItemnoFromSession($layer_no));	
	}
	*/
####################################################################################
#### 아바타 찜하기
####################################################################################
	function insertZzim($item_no, $userid){
		$sqlstr = "insert into ".$this->WIZTABLE["AVATARZZIM"]." (user_id, item_no, wdate) values ('$userid', '$item_no',".time().") ";
		$result = $this->dbcon->_query($sqlstr);
		return $result;
	}
####################################################################################
#### 찜에 동일 아이템 중복책크
####################################################################################
	function getZzim($item_no, $userid){
		$sqlstr = "select count(*) from ".$this->WIZTABLE["AVATARZZIM"]." where user_id = '$userid' and item_no = '$item_no'";
		$rtn = $this->dbcon->_query($sqlstr);
		return $rtn;
	}	
####################################################################################
#### 아이템 파일 명으로 부터 item_id 구하기
####################################################################################
	function getItemidFromfilename($filename){
		$sqlstr = "select i.no from ".$this->WIZTABLE["AVATARITEM"]." i ";
		$sqlstr .= " left join ".$this->WIZTABLE["AVATARFACE"]." f ";
		$sqlstr .= " on i.no = f.item_id ";
		$sqlstr .= " where f.face01a = '$filename' or f.face02a = '$filename' or f.face03a = '$filename' or f.face04a = '$filename' or f.face05a = '$filename' or filename2 = '$filename'";
		$rtn = $this->dbcon->get_one($sqlstr);
		return $rtn;
	}
####################################################################################
#### 세션관련 폴더 및 파일 생성
####################################################################################
	function makeSessionDir($userid=null){
		//global $_SERVER["DOCUMENT_ROOT"];
		
		if(!$userid) $userid = $this->user_id;
		$root = $this->cfg["avatar"]["session_path"];
		## 서버 세팅에 따라 상기 경로를 바꾸어 준다.
		
		//$this->getlogininfo($_SESSION["wizavatar"]);
		//$this->getlogininfo();
		//$userid = $this->user_id;

		$strlen = strlen($userid);
		$this->SessionFolder = $root;
	
		for($i=0; $i<$strlen; $i++){
			$this->SessionFolder .= "/".substr($userid, $i, 1);
			if(!file_exists($this->SessionFolder)){
				mkdir($this->SessionFolder);
			}
		}
	}
	
	function iniSessionFile(){//세션 파일을 초기화 시킨다.
		$this->getSessionDir($userid);
		$sessionfile = $this->getshowinitName($this->cfg["member"]["mid"]);
		$this->mkSessionFile($sessionfile);
	}
	
	function mkSessionFile($str){//세션 파일을 초기화 시킨다.
		$this->getSessionDir($userid);
		$fp = fopen($this->SessionFolder."/sessionfile.php", "w");
		fwrite($fp,"<?\n");
		$str = "\$wizAvatarSession = \"$str\";\n";
		fwrite($fp,$str);
		fwrite($fp,"?>");	
		fclose($fp);			
	}
	
	//function makeSessionFile($flag,$layer_no,$kind=null, $gender=null, $a_src=null, $a_src1=null, $item_no=null){
	function makeSessionFile($flag,$layer_no,$src){
		## $flag : minus , plus
		$this->getSessionDir($userid);
		
		if(is_file($this->SessionFolder."/sessionfile.php")){
			include $this->SessionFolder."/sessionfile.php";
		}else{
			$this->iniSessionFile();
		}
				
		//세션값을 설정하고 초기 세션 파일을 만든다.
		if(!$_SESSION["wizavatar"]){
			$_SESSION["wizavatar"]=$this->cfg["member"]["mid"];
			$this->iniSessionFile();
		}
				
			
		if(is_file($this->SessionFolder."/sessionfile.php")){
			include $this->SessionFolder."/sessionfile.php";
		}

		$tmp = explode(",", $wizAvatarSession);
		$tmp[$layer_no] = $src;
		$sessionfile = implode(",",$tmp);

		$this->mkSessionFile($sessionfile);
		
	}
	
	function deleteSessionFile($layer_no){
		$this->getSessionDir($userid);
		if(is_file($this->SessionFolder."/sessionfile.php")){
			include $this->SessionFolder."/sessionfile.php";
		}	
		//echo $layer_no;
		$tmp = explode(",", $wizAvatarSession);
		$tmp[$layer_no] = $this->cfg["avatar"]["avatarpath"]."default_blank.gif";;
		$sessionfile = implode(",",$tmp);
		$this->mkSessionFile($sessionfile);
	}
	
	function deleteAllSessionFile($userid){//class.member.php 도 동일 파일존재(수정시 같이 수정)
		$this->getSessionDir($userid);
		//echo $this->SessionFolder."/sessionfile.php";
		if(is_file($this->SessionFolder."/sessionfile.php")){
			unlink ($this->SessionFolder."/sessionfile.php");
		}	
	}
	
	function getSessionDir($userid=NULL){
		
		if(!$this->SessionFolder){

			if($userid == NULL) $userid = $this->cfg["member"]["mid"];
			$root = $_SERVER["DOCUMENT_ROOT"]."/config/wizavatar/session";
			$this->makeSessionDir($userid);
			//$this->getlogininfo($_SESSION["wizavatar"]);
			//$this->getlogininfo();
			//$userid = $this->user_id;
			//$userid = $this->cfg["member"]["mid"];
			$strlen = strlen($userid);
			$this->SessionFolder = $root;
			for($i=0; $i<$strlen; $i++){
				$this->SessionFolder .= "/".substr($userid, $i, 1);
			}
			//echo $this->SessionFolder;
		}
	}

	function getAvatarSession($userid=null){
		$this->getSessionDir($userid);
		if(!is_file($this->SessionFolder."/sessionfile.php")){
			$this->iniSessionFile();
		}
		include $this->SessionFolder."/sessionfile.php";
		return $wizAvatarSession;

	}
####################################################################################
#### 세션관련 폴더 및 파일 생성
####################################################################################
	function deleteUser($userid){
		$this->db_connect();
		$sqlstr = "delete from ".$this->WIZTABLE["AVATARALBUM"]." where user_id='$userid'";
		$this->dbcon->_query($sqlstr);
		
		$sqlstr = "delete from ".$this->WIZTABLE["AVATARMEMCONFIG"]." where user_id='$userid'";
		$this->dbcon->_query($sqlstr);
		
		$sqlstr = "delete from ".$this->WIZTABLE["AVATARCOMMENT"]." where user_id='$userid'";
		$this->dbcon->_query($sqlstr);
		
		$sqlstr = "delete from ".$this->WIZTABLE["AVATARMERCHANT"]." where user_id='$userid'";
		$this->dbcon->_query($sqlstr);
		
		$sqlstr = "delete from ".$this->WIZTABLE["AVATARZZIM"]." where user_id='$userid'";
		$this->dbcon->_query($sqlstr);
		
		$sqlstr = "delete from ".$this->WIZTABLE["AVATARPOINT"]." where id='$userid'";
		$this->dbcon->_query($sqlstr);
	}
	
###################################################
######### 카테고리 관련
###################################################	
	function getCategoryName($code){
		$sqlstr = "select cat_name from ".$this->WIZTABLE["CATEGORY"]." where cat_no = '$code' and cat_flag='wizavatar'";

		$rtn = $this->dbcon->get_one($sqlstr);
		return $rtn;
	}
	
	function getsubcategory($code){//2차 카테고리를 구한다.
		#$code : 1차 카테고리
		$rtn = array();
		$sqlstr = "select cat_no, cat_name from wizCategory where cat_flag='wizavatar' and right(cat_no, 3) = '$code' and length(cat_no) = 6 order by cat_no asc";
		$sqlqry = $this->dbcon->_query($sqlstr);
		while($list = $this->dbcon->_fetch_array($sqlqry)):
			extract($list);
			$rtn[$cat_no] = $cat_name;
		endwhile;
		return $rtn;
	}
	
	function getCategoryFullPath($code, $split=" &gt; "){
	//echo "code = $code <br>";
		if($code){
			$codelen = strlen($code);
			$big_code = substr($code, -3);
			$mid_code = substr($code, -6);
			$small_code = substr($code, -9);
			
			if($codelen > 0){
				$codename = $this->getCategoryName($big_code);
			}
			if($codelen > 3){
				$codename .= $split.$this->getCategoryName($mid_code);
			}
			if($codelen > 6){
				$codename .= $split.$this->getCategoryName($small_code);
			}	
		}else{
			$codename = $split."전체";
		}
		return $codename;
	}


	function showFace($facearr){
		$path = $this->cfg["avatar"]["avatarpath"]."face_img/";
		foreach($facearr[i] as $key => $value){
			$str .= "<img src='".$path.$value."' border='0' width='26' height='26' alt='표정이미지' />&nbsp;\n"; 
		}
		echo $str;
	}	
	
	function getinit(){## 초기 값을 맞추어 준다.
	//echo "user_gender = ".$this->user_gender;
		$rtn = array();
		if ( $this->user_gender == "2" ){
			$rtn[3] = 2;//기본몸
			$rtn[4] = 13;//입
			$rtn[5] = 12;//눈
			//$rtn[6] = 6;//눈썹
			//$rtn[7] = 8;//이마
			//$rtn[11] = 9;
			$rtn[29] = $this->addacce();
		}else{ 
			$rtn[3] = 1;
			$rtn[4] = 4;
			$rtn[5] = 3;
			//$rtn[6] = 5;
			//$rtn[8] = 7;
			//$rtn[11] = 9;
			$rtn[29] = $this->addacce();		
		}
		//print_r($rtn);
		return $rtn;
	}
	
	function getshowinit($userid, $flag=null){##실제 보여질 초기값을 가져온다.
		#flag : s : session
		$useravatar = $this->getmyavatar($userid, $flag);//현재 user가 착용하고 있는 아이템 값
		//print_r($useravatar);
		//print_r($useravatar);
		$iniarr = $this->getinit();//초기 값을 가져온다.(기본으로 주어지는 값)
			## 기본 아바타와 현재 아바타를 믹싱한다.
		foreach($useravatar as $key=>$value){
			if(!$value) $useravatar[$key] = $iniarr[$key];
		}
		return $useravatar;
	}

	function getdiffitme($userid){//기본 착용아이템과 현재 결재가 이루어지지 않은 아이템을 비교하여 구매해야할 아이템을 구한다.
		$ini_item = $this->getshowinit($userid);
		//print_r($ini_item);
		//echo "<br>----------------------<br>";
		$curr_item = $this->getmyavatar($userid, "s");
		//print_r($curr_item);
		$rtn = array();
		foreach($ini_item as $key=>$value){
			if($value != $curr_item[$key]){
				//echo "$value : ".$curr_item[$key]." <br>";
				$rtn[$key] = $curr_item[$key];
				//echo "adfasdf";
			}
		}
		
		return $rtn;
		
	}
	
	function addacce()//등급별 메달 수여?
	{
		$exp = $this->cfg["member"]["mexp"];
		switch(true){
			case $exp <= 839;		$no = 26;break;
			case $exp <= 2359;		$no = 528;break;
			case $exp <= 5459;		$no = 529;break;
			case $exp <= 11039;		$no = 530;break;
			case $exp <= 20215;		$no = 89;break;
			case $exp <= 34319;		$no = 531;break;
			case $exp <= 58336;		$no = 532;break;
			case $exp <= 100805;	$no = 533;break;
			case $exp <= 174193;	$no = 534;break;
			case $exp <= 301006;	$no = 535;break;
			case $exp <= 520140;	$no = 536;break;
			case $exp <= 898802;	$no = 538;break;
			case $exp <= 1553131;	$no = 537;break;
			case $exp > 1553131;	$no = 90;break;
		}
		return $no;
	}
	
	function getbuyitem(){
		##초기 아이템과 입고 있는 아이템을 비교하여 변경된 모든 아이템을 구한다.
		
		
	
	}
	
}	
?>