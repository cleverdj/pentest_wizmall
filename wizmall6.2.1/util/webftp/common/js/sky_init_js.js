<!--
/**
* 자바스크립트 기본 라이브러리 초기화
*
* @filename : common/js/sky_init_js.js
* @version  : v 1.0 2003.01.03 14:15:22
* @author   : nsl <smpoem@magicn.com>
*/

    isExplorer = false;
    isNetscape = false;


    // 브라우저 판별
	function getBrowser() {

        if (navigator.appName.charAt(0) == "M") {
            
            isExplorer = true;
            this.isExplorer = true;
        } else {
            
            isNetscape = true;
            this.isNetscape = true;
        }

        // display 제어
        this.setDisplay = setDisplay;

        // 사용자 원도우 크기 정보
        this.getClientInfo = getClientInfo;

        // 원도우에서 중간 위치 구하기
        this.getClientCenterPos = getClientCenterPos;

        // 레이어 보이기
        this.showLayer = showLayer;

        // 레이어 숨기기
        this.hideLayer = hideLayer;

        // 레이어 위치 변경
        this.setLayerPos = setLayerPos;

	    // 현재 프레임의 화면 width
		this.getClientWidth = getClientWidth;

	    // 현재 프레임의 화면 height
		this.getClientHeight = getClientHeight;

	    // 전체 원도우(프레임 포함) 화면 width
		this.getParentClientWidth = getParentClientWidth;

	    // 전체 원도우(프레임 포함) 화면 height
		this.getParentClientHeight = getParentClientHeight;

		// 현재 프레임의 스크롤바 위치 top
		this.getScrollTop = getScrollTop;

		// 현재 프레임의 스크롤바 위치 left
		this.getScrollTop = getScrollTop;

       // 화면 중앙에 출력하기 위해 위치 계산
       this.getClientCenterPos = getClientCenterPos;

       // 화면 중앙에 출력하기 위해 위치 계산 Left
       this.getCenterPosLeft = getCenterPosLeft;

	   // 화면 중앙에 출력하기 위해 위치 계산 Top
       this.getCenterPosTop = getCenterPosTop;

       this.setLayerPos = setLayerPos;
       this.trim = trim;

    }

	sky = new getBrowser();


   // display 제어
   function setDisplay(id){

	   if (id.style.display == 'none')
		   id.style.display = 'block';
	   else
		   id.style.display = 'none';
   }

    // 레이어 보이기
	function showLayer(layer) {

		if (isExplorer)
			document.all[layer].style.visibility = "visible";
		else
	 		document.layers[layer].visibility = "visible";
	}

    // 레이어 숨기기
	function hideLayer(layer) {

		if (isExplorer)
			document.all[layer].style.visibility = "hidden";
		else
	 		document.layers[layer].visibility = "hide";
	}


    // <body> 태그 이후 호출할 것
    // scrollTop 위치는 반드시 구할때 호출할 것
	function getClientInfo() {

		if (isExplorer) {
            
            // 브라우저 크기
            this.clientWidth  = document.body.clientWidth;
            this.clientHeight = document.body.clientHeight;

            // 전체 프레임의 브라우저 크기
            this.parentClientWidth  = parent.document.body.clientWidth;
            this.parentClientHeight = parent.document.body.clientHeight;

            // 스크롤바 위치
            this.scrollTop  = document.body.scrollTop;
            this.scrollLeft = document.body.scrollLeft;

        } else {

	        this.clientWidth  =  document.body.innerWidth;
	        this.clientHeight =  document.body.innerHeight;

	        this.parentClientWidth  =  parent.document.body.innerWidth;
	        this.parentClientHeight =  parent.document.body.innerHeight;

            this.scrollTop = window.pageYOffset;
            this.scrollLeft = window.pageXOffset;
        }
	}


    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 브라우저 크기 구하기 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    // 현재 프레임의 화면 width
	function getClientWidth() {

		if (isExplorer)   return document.body.clientWidth;
		else              return document.body.innerWidth;
	}

    // 현재 프레임의 화면 height
	function getClientHeight() {

		if (isExplorer)   return document.body.clientHeight;
		else              return document.body.innerHeight;
	}

    // 전체 원도우(프레임 포함) 화면 width
	function getParentClientWidth() {

		if (isExplorer)   return parent.document.body.clientWidth;
		else              return parent.document.body.innerWidth;
	}

    // 전체 원도우(프레임 포함) 화면 height
	function getParentClientHeight() {

		if (isExplorer)   return parent.document.body.clientHeight;
		else              return parent.document.body.innerHeight;
	}

	// 현재 프레임의 스크롤바 위치 top
	function getScrollTop() {

		if (isExplorer)   return document.body.scrollTop;
		else              return window.pageYOffset;
	}

	// 현재 프레임의 스크롤바 위치 left
	function getScrollTop() {

		if (isExplorer)   return document.body.scrollLeft;
		else              return window.pageXOffset;
	}
    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /브라우저 크기 구하기 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 레이어 위치 계산 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	/**
	* 화면 중앙에 출력하기 위해 위치 계산
	*
	* @param  integer width   : 출력할 원도우 width
	* @param  integer height  : 출력할 원도우 height
	*/
    function getClientCenterPos(width, height) {

        var pos = new getClientInfo();        

		this.left  = parseInt( (pos.clientWidth - width) / 2);
		if (this.left < 10) this.left = 10;

		this.top = parseInt( (pos.clientHeight - height) / 2);
		if (this.top  < 10) this.top = 10;
	}


	/**
	* 화면 중앙에 출력하기 위해 위치 계산 Left
	*
	* @param  integer width  : 출력할 원도우 width
	*/
    function getCenterPosLeft(width) {

		var left  = parseInt( (sky.getParentClientWidth() - width) / 2);

		if (left < 10) left = 10;

		return left;
	}

	/**
	* 화면 중앙에 출력하기 위해 위치 계산 Top
	*
	* @param  integer height : 출력할 원도우 height
	*/
    function getCenterPosTop(height) {

		var top = parseInt( (sky.getParentClientHeight() - height) / 2);

		if (top  < 10) top = 10;

		return top;
	}
    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ /레이어 위치 계산 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


    /**
    * 레이어 위치 조정
    *
    * @param  string   layerID : 레이어 이름
    * @param  integer  left    : left
    * @param  integer  top     : top
    */
    function setLayerPos(layerID, left, top) {

        if (isExplorer) {

            document.all[layerID].style.top   = top;
            document.all[layerID].style.left  = left;

        } else {
           
            document.layers[layerID].top  = top;
            document.layers[layerID].left = left;
        }
    }


  function trim(str) {
    
      var count = str.length;
      var len = count;                
      var st = 0;
                
      while ((st < len) && (str.charAt(st) <= ' ')) {
         st++;
      }

      while ((st < len) && (str.charAt(len - 1) <= ' ')) {
         len--;
      }                

      return ((st > 0) || (len < count)) ? str.substring(st, len) : str ;   
   }
//-->